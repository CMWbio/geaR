% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mergeLoci.R
\name{mergeLoci}
\alias{mergeLoci}
\title{Combines overlaps in ys and xs}
\usage{
mergeLoci(
  x,
  y,
  nCores,
  overlap = "+",
  FFD = FALSE,
  genes = NULL,
  positions = NULL
)
}
\arguments{
\item{x}{\code{GRangesList}. xs to overlap ys to.}

\item{y}{\code{GRangesList} or \code{character} containing ys. Provide wither a GRangesList or path to SQL database.}

\item{nCores}{\code{numeric} number of cores to run in parallel}

\item{overlap}{\code{character} \cr
Negative or positive overlap
"-" will subtract the y ranges from the xs \cr
"+" will bin ys into x ranges}

\item{FFD}{\code{logical} Set to deal with Four fold degenerate sites}

\item{genes}{\code{character} Vector of genes to limit anlaysis to. This 
can be useful if you have a set of low codon usage bias genes}

\item{positions}{\code{character} A vector of codon positions, 
e.g. \code{c("first", "second")} will extract codons in a 1+2 position scheme}
}
\value{
A \code{GRangesList} containing merged ranges
}
\description{
Combines multiple GRangeList objects with overlapping ranges.
}
\details{
Authour: Chris Ward
Passing multiple \code{GRange} objects will result in ordered overlaping of ranges. e.g. if a genome wide 100kb tiled x \code{GRangeList}
 generated using \code{xMaker()} is passed along with a ys \code{GRangesList} generated using \code{getwindows(y = "gene:cds")},
 This will be combined into 100kb xs containing only regions of protein coding sequence.
}
